# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2017-06-11 12:31
from __future__ import unicode_literals

from django.db import migrations, models
import django.utils.timezone
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('first_name', models.CharField(blank=True, max_length=255, verbose_name='First name')),
                ('last_name', models.CharField(blank=True, max_length=255, verbose_name='Last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='Staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='Active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128)),
                ('fax_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128)),
                ('submitted_notifications', models.BooleanField(default=True, help_text='Receive notification when a page is submitted for moderation', verbose_name='submitted notifications')),
                ('approved_notifications', models.BooleanField(default=True, help_text='Receive notification when your page edit is approved', verbose_name='approved notifications')),
                ('rejected_notifications', models.BooleanField(default=True, help_text='Receive notification when your page edit is rejected', verbose_name='rejected notifications')),
                ('preferred_language', models.CharField(default='', help_text='Select language for the admin', max_length=10, verbose_name='preferred language')),
                ('last_seen', models.DateTimeField(auto_now=True, verbose_name='last seen')),
                ('last_ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='last ip')),
                ('timezone', models.CharField(default='UTC', max_length=32, verbose_name='time zone')),
                ('is_moderator', models.BooleanField(default=False, verbose_name='moderator status')),
                ('on_sale', models.BooleanField(default=False, verbose_name='on sale status')),
                ('is_verified', models.BooleanField(default=False, help_text='Designates whether the user has verified his account by email or by other means. Un-select this to let the user activate his account.', verbose_name='verified')),
                ('phone_number_verified', models.BooleanField(default=False, help_text='Designates whether the user has verified his account by phone or by other means. Un-select this to let the user activate his account.', verbose_name='phone number verified')),
                ('topic_count', models.PositiveIntegerField(default=0, verbose_name='topic count')),
                ('comment_count', models.PositiveIntegerField(default=0, verbose_name='comment count')),
                ('last_post_hash', models.CharField(blank=True, max_length=32, verbose_name='last post hash')),
                ('last_post_on', models.DateTimeField(blank=True, null=True, verbose_name='last post on')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name_plural': 'Users',
                'verbose_name': 'User',
                'abstract': False,
            },
        ),
    ]
